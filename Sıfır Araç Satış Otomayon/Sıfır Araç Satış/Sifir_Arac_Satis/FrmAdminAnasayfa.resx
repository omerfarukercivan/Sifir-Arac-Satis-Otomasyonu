<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        b7/9L/e7wO/JK/ujAAAAAElFTkSuQmCC
</value>
  </data>
</root>